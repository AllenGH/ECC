/*
 *      CONFIDENTIAL  AND  PROPRIETARY SOFTWARE OF ARTISAN COMPONENTS, INC.
 *      
 *      Copyright (c) 2012  Artisan Components, Inc.  All  Rights Reserved.
 *      
 *      Use of this Software is subject to the terms and conditions  of the
 *      applicable license agreement with Artisan Components, Inc. In addition,
 *      this Software is protected by patents, copyright law and international
 *      treaties.
 *      
 *      The copyright notice(s) in this Software does not indicate actual or
 *      intended publication of this Software.
 *      
 *      name:			High Speed/Density Diffusion ROM Generator (ROM-DIFF)
 *           			SMIC Logic013 Process
 *      version:		2005Q2V1
 *      comment:		
 *      configuration:	 -instname "Bimod_Tag_ROM" -words 128 -bits 16 -frequency 5 -ring_width 5.0 -code_file "Bimod.rom" -mux 16 -top_layer "met5-8" -power_type rings -horiz met3 -vert met4 -cust_comment "" -bus_notation on -left_bus_delim "[" -right_bus_delim "]" -pwr_gnd_rename "VDD:VDD,GND:VSS" -prefix "" -pin_space 0.0 -name_case upper -check_instname on -diodes on -inside_ring_type GND -drive 6 -libname USERLIB -corners ff_1.32_-40.0,tt_1.2_25.0,ss_1.08_125.0,ff_1.32_0.0
 *
 *      Synopsys model for Synchronous Single-Port Rom
 *
 *      Library Name:   USERLIB
 *      Instance Name:  Bimod_Tag_ROM
 *      Words:          128
 *      Word Width:     16
 *      Mux:            16
 *      Corner:        ff_1.32_0.0
 *
 *      Creation Date:  2012-12-16 02:17:47Z
 *      Version:        2005Q2V1
 *
 *      Verified With: Synopsys Design Compiler
 *
 *      Modeling Assumptions: This library contains a black box description
 *          for a memory element.  At the library level, a
 *          default_max_transition constraint is set to the maximum
 *          characterized input slew.  Each output has a max_capacitance
 *          constraint set to the highest characterized output load.  These two
 *          constraints force Design Compiler to synthesize circuits that
 *          operate within the characterization space.  The user can tighten
 *          these constraints, if desired.  When writing SDF from Design
 *          Compiler, use the version 2.1 option.  This ensures the SDF will
 *          annotate to simulation models provided with this generator.
 *
 *      Modeling Limitations: 
 *          Due to limitations of the .lib format, some data reduction was
 *          necessary.  When reducing data, minimum values were chosen for the
 *          fast case corner and maximum values were used for the typical and
 *          best case corners.  It is recommended that critical timing and
 *          setup and hold times be checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */

library(USERLIB) {
	delay_model		: table_lookup;
	revision		: 1.1;	
	date			: "2012-12-16 02:17:47Z";
	comment			: "Confidential Information of Artisan Components, Inc.  Use subject to Artisan Components license. Copyright (c) 2012 Artisan Components, Inc.";
	time_unit		: "1ns";
	voltage_unit		: "1V";
	current_unit		: "1mA";
	leakage_power_unit	: "1mW";
	nom_process		: 1;
	nom_temperature		: 0.000;
	nom_voltage		: 1.320;
	capacitive_load_unit	 (1,pf);

	pulling_resistance_unit	        : "1kohm";

	/* additional header data */
	default_cell_leakage_power      : 0;
	default_fanout_load		: 1;
	default_inout_pin_cap		: 0.005;
	default_input_pin_cap		: 0.005;
	default_output_pin_cap		: 0.0;
	default_max_transition		: 0.750;

        /* default attributes */
        default_leakage_power_density : 0.0;
        slew_derate_from_library      : 1.000;
        slew_lower_threshold_pct_fall : 10.000;
        slew_upper_threshold_pct_fall : 90.000;
        slew_lower_threshold_pct_rise : 10.000;
        slew_upper_threshold_pct_rise : 90.000;
        input_threshold_pct_fall      : 50.000;
        input_threshold_pct_rise      : 50.000;
        output_threshold_pct_fall     : 50.000;
        output_threshold_pct_rise     : 50.000;

 	/* k-factors */
 	k_process_cell_fall             : 1;
 	k_process_cell_leakage_power    : 0;
 	k_process_cell_rise             : 1;
 	k_process_fall_transition       : 1;
 	k_process_hold_fall             : 1;
 	k_process_hold_rise             : 1;
 	k_process_internal_power        : 0;
 	k_process_min_pulse_width_high  : 1;
 	k_process_min_pulse_width_low   : 1;
 	k_process_pin_cap               : 0;
 	k_process_recovery_fall         : 1;
 	k_process_recovery_rise         : 1;
 	k_process_rise_transition       : 1;
 	k_process_setup_fall            : 1;
 	k_process_setup_rise            : 1;
 	k_process_wire_cap              : 0;
 	k_process_wire_res              : 0;
	k_temp_cell_fall		: 0.000;
	k_temp_cell_rise		: 0.000;
	k_temp_hold_fall                : 0.000;
	k_temp_hold_rise                : 0.000;
	k_temp_min_pulse_width_high     : 0.000;
	k_temp_min_pulse_width_low      : 0.000;
	k_temp_min_period               : 0.000;
	k_temp_rise_propagation         : 0.000;
	k_temp_fall_propagation         : 0.000;
	k_temp_rise_transition          : 0.0;
	k_temp_fall_transition          : 0.0;
	k_temp_recovery_fall            : 0.000;
	k_temp_recovery_rise            : 0.000;
	k_temp_setup_fall               : 0.000;
	k_temp_setup_rise               : 0.000;
	k_volt_cell_fall                : 0.000;
	k_volt_cell_rise                : 0.000;
	k_volt_hold_fall                : 0.000;
	k_volt_hold_rise                : 0.000;
	k_volt_min_pulse_width_high     : 0.000;
	k_volt_min_pulse_width_low      : 0.000;
	k_volt_min_period               : 0.000;
	k_volt_rise_propagation         : 0.000;
	k_volt_fall_propagation         : 0.000;
	k_volt_rise_transition	        : 0.0;
	k_volt_fall_transition	        : 0.0;
	k_volt_recovery_fall            : 0.000;
	k_volt_recovery_rise            : 0.000;
	k_volt_setup_fall               : 0.000;
	k_volt_setup_rise               : 0.000;


        operating_conditions(ff_1.32_0.0) {
		process	 : 1;
		temperature	 : 0.000;
		voltage	 : 1.320;
		tree_type	 : balanced_tree;
	}
        default_operating_conditions : ff_1.32_0.0;
	wire_load("sample") {
		resistance	 : 1.6e-05;
		capacitance	 : 0.0002;
		area	 : 1.7;
  		slope	 : 500;
		fanout_length	 (1,500);
	}
        lu_table_template(Bimod_Tag_ROM_bist_mux_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        lu_table_template(Bimod_Tag_ROM_mux_mem_out_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        lu_table_template(Bimod_Tag_ROM_mem_out_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(Bimod_Tag_ROM_bist_mux_slew_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(Bimod_Tag_ROM_mem_out_slew_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(Bimod_Tag_ROM_clk_setup_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(Bimod_Tag_ROM_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        power_lut_template(Bimod_Tag_ROM_energy_template_clkslew_load) {
           variable_1 : input_transition_time;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        power_lut_template(Bimod_Tag_ROM_energy_template_sigslew_load) {
           variable_1 : input_transition_time;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        power_lut_template(Bimod_Tag_ROM_energy_template_load) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        power_lut_template(Bimod_Tag_ROM_energy_template_clkslew) {
           variable_1 : input_transition_time;
               index_1 ("1000, 1001");
        }
        power_lut_template(Bimod_Tag_ROM_energy_template_sigslew) {
           variable_1 : input_transition_time;
               index_1 ("1000, 1001");
        }
	library_features(report_delay_calculation);
	type (Bimod_Tag_ROM_DATA) {
		base_type : array ;
		data_type : bit ;
		bit_width : 16;
		bit_from : 15;
		bit_to : 0 ;
		downto : true ;
	}
	type (Bimod_Tag_ROM_UPM) {
		base_type : array ;
		data_type : bit ;
		bit_width : 3;
		bit_from : 2;
		bit_to : 0 ;
		downto : true ;
	}
	type (Bimod_Tag_ROM_ADDRESS) {
		base_type : array ;
		data_type : bit ;
		bit_width : 7;
		bit_from : 6;
		bit_to : 0 ;
		downto : true ;
	}
cell(Bimod_Tag_ROM) {
	area		 : 36219.736;
	dont_use	 : TRUE;
	dont_touch	 : TRUE;
        interface_timing : TRUE;
	memory() {
		type : rom;
		address_width : 7;
		word_width : 16;
	}
        bus(Q)   {
                bus_type : Bimod_Tag_ROM_DATA;
		direction : output;
		max_capacitance : 0.860;
                memory_read() {
			address : A;
		}
                timing() {
                        related_pin :   "CLK" ;
                        timing_type : rising_edge ;
                        timing_sense : non_unate;
                        cell_rise(Bimod_Tag_ROM_mem_out_delay_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
                        index_2 ("0.000, 0.030, 0.060, 0.120, 0.280, 0.560, 0.860");
                        values ( \
                          "1.148, 1.164, 1.180, 1.211, 1.274, 1.382, 1.498", \
                          "1.149, 1.165, 1.181, 1.212, 1.275, 1.383, 1.499", \
                          "1.151, 1.167, 1.182, 1.214, 1.277, 1.385, 1.501", \
                          "1.154, 1.170, 1.186, 1.217, 1.280, 1.388, 1.504", \
                          "1.160, 1.176, 1.192, 1.223, 1.286, 1.394, 1.510", \
                          "1.166, 1.182, 1.198, 1.229, 1.292, 1.400, 1.516", \
                          "1.171, 1.187, 1.203, 1.234, 1.297, 1.405, 1.521" \
                        )
                        }
                        rise_transition(Bimod_Tag_ROM_mem_out_slew_template) {
                        index_1 ("0.000, 0.030, 0.060, 0.120, 0.280, 0.560, 0.860");
                        values ("0.040, 0.074, 0.108, 0.176, 0.357, 0.674, 1.015")
                        }
                        cell_fall(Bimod_Tag_ROM_mem_out_delay_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
                        index_2 ("0.000, 0.030, 0.060, 0.120, 0.280, 0.560, 0.860");
                        values ( \
                          "1.148, 1.164, 1.180, 1.211, 1.274, 1.382, 1.498", \
                          "1.149, 1.165, 1.181, 1.212, 1.275, 1.383, 1.499", \
                          "1.151, 1.167, 1.182, 1.214, 1.277, 1.385, 1.501", \
                          "1.154, 1.170, 1.186, 1.217, 1.280, 1.388, 1.504", \
                          "1.160, 1.176, 1.192, 1.223, 1.286, 1.394, 1.510", \
                          "1.166, 1.182, 1.198, 1.229, 1.292, 1.400, 1.516", \
                          "1.171, 1.187, 1.203, 1.234, 1.297, 1.405, 1.521" \
                        )
                        }
                        fall_transition(Bimod_Tag_ROM_mem_out_slew_template) {
                        index_1 ("0.000, 0.030, 0.060, 0.120, 0.280, 0.560, 0.860");
                        values ("0.055, 0.075, 0.095, 0.135, 0.242, 0.428, 0.629")
                        }
                }
        }
        pin(CLK)   {
		direction : input;
		capacitance : 0.390;
                clock : true;
                max_transition : 0.750;
                min_pulse_width_high : 0.048 ;
                min_pulse_width_low  : 0.071 ;
                min_period           : 1.290 ;


                internal_power(){
                        when : "!CEN \
                                 ";
                        rise_power(Bimod_Tag_ROM_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("144.827, 144.827")
                        }
                        fall_power(Bimod_Tag_ROM_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.000, 0.000")
                        }
                }
         internal_power(){
                 when : "(CEN)";
                        rise_power(Bimod_Tag_ROM_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.049, 0.049")
                        }
                        fall_power(Bimod_Tag_ROM_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.000, 0.000")
                        }
                }
        }

        pin(CEN)   {
                direction : input;
                capacitance : 0.008;
                timing() {
                        related_pin     : CLK;
                        timing_type     : setup_rising ;
                        rise_constraint(Bimod_Tag_ROM_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
                        values ( \
                          "0.226, 0.227, 0.227, 0.229, 0.231, 0.234, 0.236", \
                          "0.225, 0.225, 0.226, 0.227, 0.230, 0.233, 0.235", \
                          "0.223, 0.224, 0.225, 0.226, 0.229, 0.231, 0.233", \
                          "0.220, 0.221, 0.222, 0.223, 0.226, 0.228, 0.230", \
                          "0.214, 0.215, 0.215, 0.217, 0.219, 0.222, 0.224", \
                          "0.208, 0.208, 0.209, 0.210, 0.213, 0.216, 0.218", \
                          "0.203, 0.204, 0.205, 0.206, 0.209, 0.211, 0.213" \
                        )
                        }
                        fall_constraint(Bimod_Tag_ROM_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
                        values ( \
                          "0.131, 0.137, 0.144, 0.159, 0.188, 0.217, 0.239", \
                          "0.130, 0.136, 0.143, 0.158, 0.187, 0.216, 0.237", \
                          "0.129, 0.134, 0.142, 0.156, 0.185, 0.214, 0.236", \
                          "0.125, 0.131, 0.139, 0.153, 0.182, 0.211, 0.233", \
                          "0.119, 0.125, 0.132, 0.147, 0.176, 0.205, 0.227", \
                          "0.113, 0.119, 0.126, 0.141, 0.170, 0.199, 0.220", \
                          "0.108, 0.114, 0.122, 0.136, 0.165, 0.194, 0.216" \
                        )
                        }
                } 
                timing() {
                        related_pin     : CLK;
                        timing_type     : hold_rising ;
                        rise_constraint(Bimod_Tag_ROM_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
                        values ( \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
                        )
                        }
                        fall_constraint(Bimod_Tag_ROM_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
                        values ( \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
                        )
                        }
               }
        }
        bus(A)   {
                bus_type : Bimod_Tag_ROM_ADDRESS;
                direction : input;
                capacitance : 0.030;
                timing() {
                        related_pin     : CLK;
                        timing_type     : setup_rising ;
                        rise_constraint(Bimod_Tag_ROM_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
                        values ( \
                          "0.159, 0.159, 0.159, 0.160, 0.162, 0.164, 0.165", \
                          "0.157, 0.158, 0.158, 0.159, 0.161, 0.162, 0.164", \
                          "0.156, 0.156, 0.157, 0.157, 0.159, 0.161, 0.162", \
                          "0.153, 0.153, 0.153, 0.154, 0.156, 0.158, 0.159", \
                          "0.147, 0.147, 0.147, 0.148, 0.150, 0.151, 0.153", \
                          "0.140, 0.141, 0.141, 0.142, 0.144, 0.145, 0.147", \
                          "0.136, 0.136, 0.136, 0.137, 0.139, 0.141, 0.142" \
                        )
                        }
                        fall_constraint(Bimod_Tag_ROM_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
                        values ( \
                          "0.171, 0.174, 0.177, 0.184, 0.198, 0.211, 0.222", \
                          "0.170, 0.172, 0.176, 0.183, 0.196, 0.210, 0.220", \
                          "0.168, 0.171, 0.174, 0.181, 0.195, 0.209, 0.219", \
                          "0.165, 0.168, 0.171, 0.178, 0.192, 0.205, 0.216", \
                          "0.159, 0.162, 0.165, 0.172, 0.186, 0.199, 0.210", \
                          "0.153, 0.155, 0.159, 0.166, 0.179, 0.193, 0.203", \
                          "0.148, 0.151, 0.154, 0.161, 0.175, 0.188, 0.199" \
                        )
                        }
                } 
                timing() {
                        related_pin     : CLK;
                        timing_type     : hold_rising ;
                        rise_constraint(Bimod_Tag_ROM_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
                        values ( \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
                        )
                        }
                        fall_constraint(Bimod_Tag_ROM_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.600, 0.750");
                        values ( \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
                        )
                        }
               }
                internal_power(){
                        when : "CEN";
                        rise_power(Bimod_Tag_ROM_energy_template_sigslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.420, 0.420")
                        }
                        fall_power(Bimod_Tag_ROM_energy_template_sigslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.420, 0.420")
                        }
                }
        }

        cell_leakage_power : 6.48E-3;
}
}
