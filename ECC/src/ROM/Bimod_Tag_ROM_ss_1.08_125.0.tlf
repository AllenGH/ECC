/*
 *      CONFIDENTIAL  AND  PROPRIETARY SOFTWARE OF ARTISAN COMPONENTS, INC.
 *      
 *      Copyright (c) 2012  Artisan Components, Inc.  All  Rights Reserved.
 *      
 *      Use of this Software is subject to the terms and conditions  of the
 *      applicable license agreement with Artisan Components, Inc. In addition,
 *      this Software is protected by patents, copyright law and international
 *      treaties.
 *      
 *      The copyright notice(s) in this Software does not indicate actual or
 *      intended publication of this Software.
 *      
 *      name:			High Speed/Density Diffusion ROM Generator (ROM-DIFF)
 *           			SMIC Logic013 Process
 *      version:		2005Q2V1
 *      comment:		
 *      configuration:	 -instname "Bimod_Tag_ROM" -words 128 -bits 16 -frequency 5 -ring_width 5.0 -code_file "Bimod.rom" -mux 16 -top_layer "met5-8" -power_type rings -horiz met3 -vert met4 -cust_comment "" -bus_notation on -left_bus_delim "[" -right_bus_delim "]" -pwr_gnd_rename "VDD:VDD,GND:VSS" -prefix "" -pin_space 0.0 -name_case upper -check_instname on -diodes on -inside_ring_type GND -drive 6 -libname USERLIB -corners ff_1.32_-40.0,tt_1.2_25.0,ss_1.08_125.0,ff_1.32_0.0
 *
 *      TLF model for Synchronous Single-Port Rom
 *
 *      Library Name:   USERLIB
 *      Instance Name:  Bimod_Tag_ROM
 *      Words:          128
 *      Word Width:     16
 *      Mux:            16
 *      Process:        ss_1.08_125.0
 *
 *      Creation Date:  2012-12-16 02:17:50Z
 *      Version:	2005Q2V1
 *
 *      Verified With: Cadence Central Delay Calculator
 *
 *      Modeling Assumptions: This memory model is written using TLF 3.0
 *          constructs.  Warning and Error messages are issued if an input
 *          encounters a slew over the maximum characterized input slew.
 *          Warning messages are issued if an output is presented with greater
 *          that the maximum characterized load.  SDF created with this model
 *          will annotate to simulation models provided with this generator.
 *
 *      Modeling Limitations: Due to the limitations of this tool and the
 *          others it interacts with, some data reduction was necessary.  When
 *          reducing data, minimum values were chosen for the fast case corner
 *          and maximum values were used for the typical and best case corners.
 *          It is recommended that critical timing and setup and hold times be
 *          checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */
header(
  library("USERLIB")
  date("2012-12-16 02:17:50Z")
  vendor("Confidential Information of Artisan Components, Inc.  Use subject to Artisan Components license. Copyright (c) 2012 Artisan Components, Inc.")
  environment("ss_1.08_125.0")
  technology("CMOS")
  version("2005Q2V1")
  tlf_version("4.1")
)
/* wire load */
net_res_model(gateres (linear value(0:~:8.5e-8:5.0e-8 )))
net_cap_model(gatecap (linear value(0:3:1.0e-4:0.005 3:10:3.0e-4:0.002 )))

/* timing properties */
properties(
  /* models for RC delays */
  net_cap (gatecap)
  net_res (gateres)

  /* operating conditions */
  proc_var(1)
  temperature(125.000)
  voltage(1.080)

  /* multipliers and k-factors */
  proc_mult(1.0)
  temp_mult(1.0)
  volt_mult(1.0)

  /* threshold definitions */
  table_input_threshold (0.500)
  table_output_threshold (0.500)
  table_transition_start (0.100)
  table_transition_end (0.900)

  /* defaults */
  slew_limit(warn(1.500) error(1.500))
  load_limit(0.860) /* max output load */

  /* unit attributes */
  unit(
    time_unit(1ns)
    volt_unit(1V)
    current_unit(1uA)
    power_unit(1mW)
    area_unit(1squ)
    cap_unit (1PF)
  )
)

cell(Bimod_Tag_ROM
Area (36219.736)
CT_TOLERANCE(0.108)
TIMING_model (tch_tcens_rise      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (
         (0.446:0.446:0.446 0.451:0.451:0.451 0.456:0.456:0.456 0.468:0.468:0.468 0.502:0.502:0.502 0.559:0.559:0.559 0.615:0.615:0.615)
         (0.439:0.439:0.439 0.443:0.443:0.443 0.449:0.449:0.449 0.460:0.460:0.460 0.494:0.494:0.494 0.551:0.551:0.551 0.608:0.608:0.608)
         (0.429:0.429:0.429 0.434:0.434:0.434 0.440:0.440:0.440 0.451:0.451:0.451 0.485:0.485:0.485 0.542:0.542:0.542 0.598:0.598:0.598)
         (0.410:0.410:0.410 0.415:0.415:0.415 0.421:0.421:0.421 0.432:0.432:0.432 0.466:0.466:0.466 0.523:0.523:0.523 0.580:0.580:0.580)
         (0.354:0.354:0.354 0.359:0.359:0.359 0.364:0.364:0.364 0.376:0.376:0.376 0.410:0.410:0.410 0.467:0.467:0.467 0.523:0.523:0.523)
         (0.260:0.260:0.260 0.265:0.265:0.265 0.270:0.270:0.270 0.282:0.282:0.282 0.316:0.316:0.316 0.373:0.373:0.373 0.429:0.429:0.429)
         (0.166:0.166:0.166 0.171:0.171:0.171 0.176:0.176:0.176 0.188:0.188:0.188 0.222:0.222:0.222 0.279:0.279:0.279 0.335:0.335:0.335)
       )))
TIMING_model (tch_tcens_fall      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (
         (0.342:0.342:0.342 0.349:0.349:0.349 0.359:0.359:0.359 0.377:0.377:0.377 0.433:0.433:0.433 0.526:0.526:0.526 0.619:0.619:0.619)
         (0.334:0.334:0.334 0.342:0.342:0.342 0.351:0.351:0.351 0.370:0.370:0.370 0.425:0.425:0.425 0.518:0.518:0.518 0.611:0.611:0.611)
         (0.325:0.325:0.325 0.333:0.333:0.333 0.342:0.342:0.342 0.360:0.360:0.360 0.416:0.416:0.416 0.509:0.509:0.509 0.602:0.602:0.602)
         (0.306:0.306:0.306 0.314:0.314:0.314 0.323:0.323:0.323 0.342:0.342:0.342 0.397:0.397:0.397 0.490:0.490:0.490 0.583:0.583:0.583)
         (0.250:0.250:0.250 0.257:0.257:0.257 0.267:0.267:0.267 0.285:0.285:0.285 0.341:0.341:0.341 0.434:0.434:0.434 0.527:0.527:0.527)
         (0.156:0.156:0.156 0.163:0.163:0.163 0.173:0.173:0.173 0.191:0.191:0.191 0.247:0.247:0.247 0.340:0.340:0.340 0.433:0.433:0.433)
         (0.062:0.062:0.062 0.069:0.069:0.069 0.079:0.079:0.079 0.097:0.097:0.097 0.153:0.153:0.153 0.246:0.246:0.246 0.339:0.339:0.339)
       )))
TIMING_model (tch_tcenh_rise      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (
         (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
         (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
         (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
         (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
         (0.010:0.010:0.010 0.005:0.005:0.005 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
         (0.104:0.104:0.104 0.099:0.099:0.099 0.093:0.093:0.093 0.082:0.082:0.082 0.048:0.048:0.048 0.000:0.000:0.000 0.000:0.000:0.000)
         (0.198:0.198:0.198 0.193:0.193:0.193 0.187:0.187:0.187 0.176:0.176:0.176 0.142:0.142:0.142 0.085:0.085:0.085 0.028:0.028:0.028)
       )))
TIMING_model (tch_tcenh_fall      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (
         (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
         (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
         (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
         (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
         (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
         (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
         (0.094:0.094:0.094 0.087:0.087:0.087 0.078:0.078:0.078 0.059:0.059:0.059 0.003:0.003:0.003 0.000:0.000:0.000 0.000:0.000:0.000)
       )))
TIMING_model (tch_tas_rise      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (
         (0.438:0.438:0.438 0.441:0.441:0.441 0.444:0.444:0.444 0.451:0.451:0.451 0.472:0.472:0.472 0.506:0.506:0.506 0.540:0.540:0.540)
         (0.431:0.431:0.431 0.433:0.433:0.433 0.437:0.437:0.437 0.444:0.444:0.444 0.464:0.464:0.464 0.498:0.498:0.498 0.533:0.533:0.533)
         (0.421:0.421:0.421 0.424:0.424:0.424 0.427:0.427:0.427 0.434:0.434:0.434 0.455:0.455:0.455 0.489:0.489:0.489 0.523:0.523:0.523)
         (0.402:0.402:0.402 0.405:0.405:0.405 0.409:0.409:0.409 0.415:0.415:0.415 0.436:0.436:0.436 0.470:0.470:0.470 0.505:0.505:0.505)
         (0.346:0.346:0.346 0.349:0.349:0.349 0.352:0.352:0.352 0.359:0.359:0.359 0.380:0.380:0.380 0.414:0.414:0.414 0.448:0.448:0.448)
         (0.252:0.252:0.252 0.255:0.255:0.255 0.258:0.258:0.258 0.265:0.265:0.265 0.286:0.286:0.286 0.320:0.320:0.320 0.354:0.354:0.354)
         (0.158:0.158:0.158 0.161:0.161:0.161 0.164:0.164:0.164 0.171:0.171:0.171 0.192:0.192:0.192 0.226:0.226:0.226 0.260:0.260:0.260)
       )))
TIMING_model (tch_tas_fall      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (
         (0.326:0.326:0.326 0.330:0.330:0.330 0.335:0.335:0.335 0.344:0.344:0.344 0.373:0.373:0.373 0.421:0.421:0.421 0.468:0.468:0.468)
         (0.319:0.319:0.319 0.323:0.323:0.323 0.327:0.327:0.327 0.337:0.337:0.337 0.366:0.366:0.366 0.413:0.413:0.413 0.461:0.461:0.461)
         (0.309:0.309:0.309 0.313:0.313:0.313 0.318:0.318:0.318 0.328:0.328:0.328 0.356:0.356:0.356 0.404:0.404:0.404 0.452:0.452:0.452)
         (0.291:0.291:0.291 0.294:0.294:0.294 0.299:0.299:0.299 0.309:0.309:0.309 0.337:0.337:0.337 0.385:0.385:0.385 0.433:0.433:0.433)
         (0.234:0.234:0.234 0.238:0.238:0.238 0.243:0.243:0.243 0.252:0.252:0.252 0.281:0.281:0.281 0.329:0.329:0.329 0.376:0.376:0.376)
         (0.140:0.140:0.140 0.144:0.144:0.144 0.149:0.149:0.149 0.158:0.158:0.158 0.187:0.187:0.187 0.235:0.235:0.235 0.282:0.282:0.282)
         (0.046:0.046:0.046 0.050:0.050:0.050 0.055:0.055:0.055 0.065:0.065:0.065 0.093:0.093:0.093 0.141:0.141:0.141 0.189:0.189:0.189)
       )))
TIMING_model (tch_tah_rise      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (
         (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
         (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
         (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
         (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
         (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
         (0.033:0.033:0.033 0.031:0.031:0.031 0.027:0.027:0.027 0.020:0.020:0.020 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
         (0.127:0.127:0.127 0.125:0.125:0.125 0.121:0.121:0.121 0.114:0.114:0.114 0.094:0.094:0.094 0.059:0.059:0.059 0.025:0.025:0.025)
       )))
TIMING_model (tch_tah_fall      (spline
       (clock_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (input_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (
         (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
         (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
         (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
         (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
         (0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000 0.000:0.000:0.000)
         (0.055:0.055:0.055 0.052:0.052:0.052 0.047:0.047:0.047 0.037:0.037:0.037 0.009:0.009:0.009 0.000:0.000:0.000 0.000:0.000:0.000)
         (0.149:0.149:0.149 0.146:0.146:0.146 0.141:0.141:0.141 0.131:0.131:0.131 0.103:0.103:0.103 0.055:0.055:0.055 0.007:0.007:0.007)
       )))
TIMING_model (dly_clk_q_rise      (spline
       (input_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (load_axis 0.000 0.030 0.060 0.120 0.280 0.560 0.860)
       (
         (2.554:2.554:2.554 2.583:2.583:2.583 2.612:2.612:2.612 2.669:2.669:2.669 2.822:2.822:2.822 3.089:3.089:3.089 3.375:3.375:3.375)
         (2.562:2.562:2.562 2.590:2.590:2.590 2.619:2.619:2.619 2.676:2.676:2.676 2.829:2.829:2.829 3.096:3.096:3.096 3.383:3.383:3.383)
         (2.571:2.571:2.571 2.600:2.600:2.600 2.628:2.628:2.628 2.686:2.686:2.686 2.838:2.838:2.838 3.106:3.106:3.106 3.392:3.392:3.392)
         (2.590:2.590:2.590 2.619:2.619:2.619 2.647:2.647:2.647 2.705:2.705:2.705 2.857:2.857:2.857 3.125:3.125:3.125 3.411:3.411:3.411)
         (2.646:2.646:2.646 2.675:2.675:2.675 2.704:2.704:2.704 2.761:2.761:2.761 2.914:2.914:2.914 3.181:3.181:3.181 3.467:3.467:3.467)
         (2.740:2.740:2.740 2.769:2.769:2.769 2.798:2.798:2.798 2.855:2.855:2.855 3.008:3.008:3.008 3.275:3.275:3.275 3.561:3.561:3.561)
         (2.834:2.834:2.834 2.863:2.863:2.863 2.892:2.892:2.892 2.949:2.949:2.949 3.102:3.102:3.102 3.369:3.369:3.369 3.655:3.655:3.655)
       )))
TIMING_model (dly_clk_q_fall      (spline
       (input_slew_axis 0.010 0.050 0.100 0.200 0.500 1.000 1.500)
       (load_axis 0.000 0.030 0.060 0.120 0.280 0.560 0.860)
       (
         (2.593:2.593:2.593 2.616:2.616:2.616 2.639:2.639:2.639 2.684:2.684:2.684 2.805:2.805:2.805 3.018:3.018:3.018 3.245:3.245:3.245)
         (2.601:2.601:2.601 2.624:2.624:2.624 2.646:2.646:2.646 2.692:2.692:2.692 2.813:2.813:2.813 3.025:3.025:3.025 3.252:3.252:3.252)
         (2.610:2.610:2.610 2.633:2.633:2.633 2.656:2.656:2.656 2.701:2.701:2.701 2.822:2.822:2.822 3.034:3.034:3.034 3.262:3.262:3.262)
         (2.629:2.629:2.629 2.652:2.652:2.652 2.674:2.674:2.674 2.720:2.720:2.720 2.841:2.841:2.841 3.053:3.053:3.053 3.281:3.281:3.281)
         (2.685:2.685:2.685 2.708:2.708:2.708 2.731:2.731:2.731 2.776:2.776:2.776 2.898:2.898:2.898 3.110:3.110:3.110 3.337:3.337:3.337)
         (2.779:2.779:2.779 2.802:2.802:2.802 2.825:2.825:2.825 2.870:2.870:2.870 2.991:2.991:2.991 3.204:3.204:3.204 3.431:3.431:3.431)
         (2.873:2.873:2.873 2.896:2.896:2.896 2.919:2.919:2.919 2.964:2.964:2.964 3.085:3.085:3.085 3.298:3.298:3.298 3.525:3.525:3.525)
       )))
TIMING_model (sl_q_rise      (spline
       (load_axis 0.000 0.030 0.060 0.120 0.280 0.560 0.860)
       ((0.068:0.068:0.068 0.130:0.130:0.130 0.192:0.192:0.192 0.317:0.317:0.317 0.649:0.649:0.649 1.231:1.231:1.231 1.854:1.854:1.854))))
TIMING_model (sl_q_fall      (spline
       (load_axis 0.000 0.030 0.060 0.120 0.280 0.560 0.860)
       ((0.114:0.114:0.114 0.154:0.154:0.154 0.195:0.195:0.195 0.275:0.275:0.275 0.490:0.490:0.490 0.867:0.867:0.867 1.270:1.270:1.270))))
TIMING_model (period_tcyc (const (2.760)))
TIMING_model (tpw_tckl (const (0.189)))
TIMING_model (tpw_tckh (const (0.120)))
bus(Q[15:0] bustype(output)
 load_limit(warn(0.860) error(2.147483647e3))
 capacitance(0.000)
)
pin(CLK pintype(input)
 capacitance(0.376)
)
pin(CEN pintype(input)
 capacitance(0.007)
)
bus(A[6:0] bustype(input)
 capacitance(0.028)
)
path (CLK => Q[0] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLK => Q[0] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLK => Q[1] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLK => Q[1] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLK => Q[2] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLK => Q[2] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLK => Q[3] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLK => Q[3] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLK => Q[4] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLK => Q[4] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLK => Q[5] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLK => Q[5] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLK => Q[6] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLK => Q[6] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLK => Q[7] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLK => Q[7] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLK => Q[8] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLK => Q[8] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLK => Q[9] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLK => Q[9] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLK => Q[10] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLK => Q[10] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLK => Q[11] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLK => Q[11] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLK => Q[12] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLK => Q[12] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLK => Q[13] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLK => Q[13] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLK => Q[14] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLK => Q[14] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))
path (CLK => Q[15] 01 01   delay(dly_clk_q_rise)  slew(sl_q_rise))
path (CLK => Q[15] 01 10   delay(dly_clk_q_fall)  slew(sl_q_fall))

setup (A[0] => CLK 01 posedge  tch_tas_rise)
hold (A[0] => CLK 01 posedge  tch_tah_rise )
setup (A[0] => CLK 10 posedge  tch_tas_fall)
hold (A[0] => CLK 10 posedge  tch_tah_fall )
setup (A[1] => CLK 01 posedge  tch_tas_rise)
hold (A[1] => CLK 01 posedge  tch_tah_rise )
setup (A[1] => CLK 10 posedge  tch_tas_fall)
hold (A[1] => CLK 10 posedge  tch_tah_fall )
setup (A[2] => CLK 01 posedge  tch_tas_rise)
hold (A[2] => CLK 01 posedge  tch_tah_rise )
setup (A[2] => CLK 10 posedge  tch_tas_fall)
hold (A[2] => CLK 10 posedge  tch_tah_fall )
setup (A[3] => CLK 01 posedge  tch_tas_rise)
hold (A[3] => CLK 01 posedge  tch_tah_rise )
setup (A[3] => CLK 10 posedge  tch_tas_fall)
hold (A[3] => CLK 10 posedge  tch_tah_fall )
setup (A[4] => CLK 01 posedge  tch_tas_rise)
hold (A[4] => CLK 01 posedge  tch_tah_rise )
setup (A[4] => CLK 10 posedge  tch_tas_fall)
hold (A[4] => CLK 10 posedge  tch_tah_fall )
setup (A[5] => CLK 01 posedge  tch_tas_rise)
hold (A[5] => CLK 01 posedge  tch_tah_rise )
setup (A[5] => CLK 10 posedge  tch_tas_fall)
hold (A[5] => CLK 10 posedge  tch_tah_fall )
setup (A[6] => CLK 01 posedge  tch_tas_rise)
hold (A[6] => CLK 01 posedge  tch_tah_rise )
setup (A[6] => CLK 10 posedge  tch_tas_fall)
hold (A[6] => CLK 10 posedge  tch_tah_fall )
setup (CEN => CLK 01 posedge  tch_tcens_rise)
hold (CEN => CLK 01 posedge  tch_tcenh_rise )
setup (CEN => CLK 10 posedge  tch_tcens_fall)
hold (CEN => CLK 10 posedge  tch_tcenh_fall )
mpwh   (CLK     tpw_tckh)
mpwl   (CLK     tpw_tckl)
period (CLK 01  period_tcyc)
)
