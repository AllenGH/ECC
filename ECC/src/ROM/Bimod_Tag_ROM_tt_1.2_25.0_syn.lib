/*
 *      CONFIDENTIAL  AND  PROPRIETARY SOFTWARE OF ARTISAN COMPONENTS, INC.
 *      
 *      Copyright (c) 2012  Artisan Components, Inc.  All  Rights Reserved.
 *      
 *      Use of this Software is subject to the terms and conditions  of the
 *      applicable license agreement with Artisan Components, Inc. In addition,
 *      this Software is protected by patents, copyright law and international
 *      treaties.
 *      
 *      The copyright notice(s) in this Software does not indicate actual or
 *      intended publication of this Software.
 *      
 *      name:			High Speed/Density Diffusion ROM Generator (ROM-DIFF)
 *           			SMIC Logic013 Process
 *      version:		2005Q2V1
 *      comment:		
 *      configuration:	 -instname "Bimod_Tag_ROM" -words 128 -bits 16 -frequency 5 -ring_width 5.0 -code_file "Bimod.rom" -mux 16 -top_layer "met5-8" -power_type rings -horiz met3 -vert met4 -cust_comment "" -bus_notation on -left_bus_delim "[" -right_bus_delim "]" -pwr_gnd_rename "VDD:VDD,GND:VSS" -prefix "" -pin_space 0.0 -name_case upper -check_instname on -diodes on -inside_ring_type GND -drive 6 -libname USERLIB -corners ff_1.32_-40.0,tt_1.2_25.0,ss_1.08_125.0,ff_1.32_0.0
 *
 *      Synopsys model for Synchronous Single-Port Rom
 *
 *      Library Name:   USERLIB
 *      Instance Name:  Bimod_Tag_ROM
 *      Words:          128
 *      Word Width:     16
 *      Mux:            16
 *      Corner:        tt_1.2_25.0
 *
 *      Creation Date:  2012-12-16 02:17:46Z
 *      Version:        2005Q2V1
 *
 *      Verified With: Synopsys Design Compiler
 *
 *      Modeling Assumptions: This library contains a black box description
 *          for a memory element.  At the library level, a
 *          default_max_transition constraint is set to the maximum
 *          characterized input slew.  Each output has a max_capacitance
 *          constraint set to the highest characterized output load.  These two
 *          constraints force Design Compiler to synthesize circuits that
 *          operate within the characterization space.  The user can tighten
 *          these constraints, if desired.  When writing SDF from Design
 *          Compiler, use the version 2.1 option.  This ensures the SDF will
 *          annotate to simulation models provided with this generator.
 *
 *      Modeling Limitations: 
 *          Due to limitations of the .lib format, some data reduction was
 *          necessary.  When reducing data, minimum values were chosen for the
 *          fast case corner and maximum values were used for the typical and
 *          best case corners.  It is recommended that critical timing and
 *          setup and hold times be checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */

library(USERLIB) {
	delay_model		: table_lookup;
	revision		: 1.1;	
	date			: "2012-12-16 02:17:46Z";
	comment			: "Confidential Information of Artisan Components, Inc.  Use subject to Artisan Components license. Copyright (c) 2012 Artisan Components, Inc.";
	time_unit		: "1ns";
	voltage_unit		: "1V";
	current_unit		: "1mA";
	leakage_power_unit	: "1mW";
	nom_process		: 1;
	nom_temperature		: 25.000;
	nom_voltage		: 1.200;
	capacitive_load_unit	 (1,pf);

	pulling_resistance_unit	        : "1kohm";

	/* additional header data */
	default_cell_leakage_power      : 0;
	default_fanout_load		: 1;
	default_inout_pin_cap		: 0.005;
	default_input_pin_cap		: 0.005;
	default_output_pin_cap		: 0.0;
	default_max_transition		: 1.000;

        /* default attributes */
        default_leakage_power_density : 0.0;
        slew_derate_from_library      : 1.000;
        slew_lower_threshold_pct_fall : 10.000;
        slew_upper_threshold_pct_fall : 90.000;
        slew_lower_threshold_pct_rise : 10.000;
        slew_upper_threshold_pct_rise : 90.000;
        input_threshold_pct_fall      : 50.000;
        input_threshold_pct_rise      : 50.000;
        output_threshold_pct_fall     : 50.000;
        output_threshold_pct_rise     : 50.000;

 	/* k-factors */
 	k_process_cell_fall             : 1;
 	k_process_cell_leakage_power    : 0;
 	k_process_cell_rise             : 1;
 	k_process_fall_transition       : 1;
 	k_process_hold_fall             : 1;
 	k_process_hold_rise             : 1;
 	k_process_internal_power        : 0;
 	k_process_min_pulse_width_high  : 1;
 	k_process_min_pulse_width_low   : 1;
 	k_process_pin_cap               : 0;
 	k_process_recovery_fall         : 1;
 	k_process_recovery_rise         : 1;
 	k_process_rise_transition       : 1;
 	k_process_setup_fall            : 1;
 	k_process_setup_rise            : 1;
 	k_process_wire_cap              : 0;
 	k_process_wire_res              : 0;
	k_temp_cell_fall		: 0.000;
	k_temp_cell_rise		: 0.000;
	k_temp_hold_fall                : 0.000;
	k_temp_hold_rise                : 0.000;
	k_temp_min_pulse_width_high     : 0.000;
	k_temp_min_pulse_width_low      : 0.000;
	k_temp_min_period               : 0.000;
	k_temp_rise_propagation         : 0.000;
	k_temp_fall_propagation         : 0.000;
	k_temp_rise_transition          : 0.0;
	k_temp_fall_transition          : 0.0;
	k_temp_recovery_fall            : 0.000;
	k_temp_recovery_rise            : 0.000;
	k_temp_setup_fall               : 0.000;
	k_temp_setup_rise               : 0.000;
	k_volt_cell_fall                : 0.000;
	k_volt_cell_rise                : 0.000;
	k_volt_hold_fall                : 0.000;
	k_volt_hold_rise                : 0.000;
	k_volt_min_pulse_width_high     : 0.000;
	k_volt_min_pulse_width_low      : 0.000;
	k_volt_min_period               : 0.000;
	k_volt_rise_propagation         : 0.000;
	k_volt_fall_propagation         : 0.000;
	k_volt_rise_transition	        : 0.0;
	k_volt_fall_transition	        : 0.0;
	k_volt_recovery_fall            : 0.000;
	k_volt_recovery_rise            : 0.000;
	k_volt_setup_fall               : 0.000;
	k_volt_setup_rise               : 0.000;


        operating_conditions(tt_1.2_25.0) {
		process	 : 1;
		temperature	 : 25.000;
		voltage	 : 1.200;
		tree_type	 : balanced_tree;
	}
        default_operating_conditions : tt_1.2_25.0;
	wire_load("sample") {
		resistance	 : 1.6e-05;
		capacitance	 : 0.0002;
		area	 : 1.7;
  		slope	 : 500;
		fanout_length	 (1,500);
	}
        lu_table_template(Bimod_Tag_ROM_bist_mux_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        lu_table_template(Bimod_Tag_ROM_mux_mem_out_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        lu_table_template(Bimod_Tag_ROM_mem_out_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(Bimod_Tag_ROM_bist_mux_slew_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(Bimod_Tag_ROM_mem_out_slew_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(Bimod_Tag_ROM_clk_setup_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(Bimod_Tag_ROM_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        power_lut_template(Bimod_Tag_ROM_energy_template_clkslew_load) {
           variable_1 : input_transition_time;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        power_lut_template(Bimod_Tag_ROM_energy_template_sigslew_load) {
           variable_1 : input_transition_time;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        power_lut_template(Bimod_Tag_ROM_energy_template_load) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        power_lut_template(Bimod_Tag_ROM_energy_template_clkslew) {
           variable_1 : input_transition_time;
               index_1 ("1000, 1001");
        }
        power_lut_template(Bimod_Tag_ROM_energy_template_sigslew) {
           variable_1 : input_transition_time;
               index_1 ("1000, 1001");
        }
	library_features(report_delay_calculation);
	type (Bimod_Tag_ROM_DATA) {
		base_type : array ;
		data_type : bit ;
		bit_width : 16;
		bit_from : 15;
		bit_to : 0 ;
		downto : true ;
	}
	type (Bimod_Tag_ROM_UPM) {
		base_type : array ;
		data_type : bit ;
		bit_width : 3;
		bit_from : 2;
		bit_to : 0 ;
		downto : true ;
	}
	type (Bimod_Tag_ROM_ADDRESS) {
		base_type : array ;
		data_type : bit ;
		bit_width : 7;
		bit_from : 6;
		bit_to : 0 ;
		downto : true ;
	}
cell(Bimod_Tag_ROM) {
	area		 : 36219.736;
	dont_use	 : TRUE;
	dont_touch	 : TRUE;
        interface_timing : TRUE;
	memory() {
		type : rom;
		address_width : 7;
		word_width : 16;
	}
        bus(Q)   {
                bus_type : Bimod_Tag_ROM_DATA;
		direction : output;
		max_capacitance : 0.860;
                memory_read() {
			address : A;
		}
                timing() {
                        related_pin :   "CLK" ;
                        timing_type : rising_edge ;
                        timing_sense : non_unate;
                        cell_rise(Bimod_Tag_ROM_mem_out_delay_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.000, 0.030, 0.060, 0.120, 0.280, 0.560, 0.860");
                        values ( \
                          "1.673, 1.693, 1.713, 1.753, 1.860, 2.047, 2.247", \
                          "1.678, 1.698, 1.718, 1.758, 1.865, 2.052, 2.252", \
                          "1.683, 1.703, 1.723, 1.764, 1.870, 2.057, 2.258", \
                          "1.695, 1.715, 1.735, 1.775, 1.882, 2.069, 2.269", \
                          "1.718, 1.738, 1.758, 1.798, 1.905, 2.092, 2.292", \
                          "1.764, 1.784, 1.804, 1.844, 1.951, 2.138, 2.339", \
                          "1.787, 1.807, 1.827, 1.868, 1.974, 2.161, 2.362" \
                        )
                        }
                        rise_transition(Bimod_Tag_ROM_mem_out_slew_template) {
                        index_1 ("0.000, 0.030, 0.060, 0.120, 0.280, 0.560, 0.860");
                        values ("0.046, 0.092, 0.138, 0.229, 0.473, 0.900, 1.357")
                        }
                        cell_fall(Bimod_Tag_ROM_mem_out_delay_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.000, 0.030, 0.060, 0.120, 0.280, 0.560, 0.860");
                        values ( \
                          "1.707, 1.721, 1.736, 1.766, 1.844, 1.981, 2.129", \
                          "1.711, 1.726, 1.741, 1.770, 1.849, 1.986, 2.133", \
                          "1.717, 1.732, 1.747, 1.776, 1.854, 1.992, 2.139", \
                          "1.729, 1.743, 1.758, 1.788, 1.866, 2.003, 2.151", \
                          "1.752, 1.766, 1.781, 1.811, 1.889, 2.027, 2.174", \
                          "1.798, 1.813, 1.827, 1.857, 1.935, 2.073, 2.220", \
                          "1.821, 1.836, 1.851, 1.880, 1.959, 2.096, 2.243" \
                        )
                        }
                        fall_transition(Bimod_Tag_ROM_mem_out_slew_template) {
                        index_1 ("0.000, 0.030, 0.060, 0.120, 0.280, 0.560, 0.860");
                        values ("0.073, 0.099, 0.126, 0.178, 0.319, 0.564, 0.827")
                        }
                }
        }
        pin(CLK)   {
		direction : input;
		capacitance : 0.379;
                clock : true;
                max_transition : 1.000;
                min_pulse_width_high : 0.069 ;
                min_pulse_width_low  : 0.106 ;
                min_period           : 1.758 ;


                internal_power(){
                        when : "!CEN \
                                 ";
                        rise_power(Bimod_Tag_ROM_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("128.549, 128.549")
                        }
                        fall_power(Bimod_Tag_ROM_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.000, 0.000")
                        }
                }
         internal_power(){
                 when : "(CEN)";
                        rise_power(Bimod_Tag_ROM_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.035, 0.035")
                        }
                        fall_power(Bimod_Tag_ROM_energy_template_clkslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.000, 0.000")
                        }
                }
        }

        pin(CEN)   {
                direction : input;
                capacitance : 0.007;
                timing() {
                        related_pin     : CLK;
                        timing_type     : setup_rising ;
                        rise_constraint(Bimod_Tag_ROM_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "0.294, 0.296, 0.299, 0.304, 0.315, 0.337, 0.347", \
                          "0.289, 0.291, 0.294, 0.299, 0.310, 0.332, 0.343", \
                          "0.283, 0.285, 0.288, 0.294, 0.304, 0.326, 0.337", \
                          "0.272, 0.274, 0.277, 0.282, 0.293, 0.315, 0.326", \
                          "0.249, 0.251, 0.253, 0.259, 0.270, 0.292, 0.302", \
                          "0.202, 0.204, 0.207, 0.213, 0.224, 0.245, 0.256", \
                          "0.179, 0.181, 0.184, 0.190, 0.200, 0.222, 0.233" \
                        )
                        }
                        fall_constraint(Bimod_Tag_ROM_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "0.201, 0.207, 0.216, 0.232, 0.265, 0.332, 0.365", \
                          "0.196, 0.203, 0.211, 0.227, 0.261, 0.327, 0.360", \
                          "0.190, 0.197, 0.205, 0.222, 0.255, 0.321, 0.355", \
                          "0.179, 0.185, 0.194, 0.210, 0.243, 0.310, 0.343", \
                          "0.155, 0.162, 0.170, 0.187, 0.220, 0.287, 0.320", \
                          "0.109, 0.116, 0.124, 0.141, 0.174, 0.240, 0.274", \
                          "0.086, 0.093, 0.101, 0.118, 0.151, 0.217, 0.251" \
                        )
                        }
                } 
                timing() {
                        related_pin     : CLK;
                        timing_type     : hold_rising ;
                        rise_constraint(Bimod_Tag_ROM_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.037, 0.035, 0.032, 0.027, 0.016, 0.000, 0.000", \
                          "0.060, 0.058, 0.055, 0.050, 0.039, 0.017, 0.006" \
                        )
                        }
                        fall_constraint(Bimod_Tag_ROM_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000" \
                        )
                        }
               }
        }
        bus(A)   {
                bus_type : Bimod_Tag_ROM_ADDRESS;
                direction : input;
                capacitance : 0.028;
                timing() {
                        related_pin     : CLK;
                        timing_type     : setup_rising ;
                        rise_constraint(Bimod_Tag_ROM_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "0.241, 0.242, 0.244, 0.248, 0.256, 0.271, 0.279", \
                          "0.236, 0.238, 0.240, 0.244, 0.251, 0.267, 0.274", \
                          "0.231, 0.232, 0.234, 0.238, 0.246, 0.261, 0.268", \
                          "0.219, 0.221, 0.222, 0.226, 0.234, 0.249, 0.257", \
                          "0.196, 0.197, 0.199, 0.203, 0.211, 0.226, 0.234", \
                          "0.150, 0.151, 0.153, 0.157, 0.165, 0.180, 0.188", \
                          "0.127, 0.128, 0.130, 0.134, 0.141, 0.157, 0.164" \
                        )
                        }
                        fall_constraint(Bimod_Tag_ROM_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "0.224, 0.227, 0.231, 0.238, 0.251, 0.279, 0.292", \
                          "0.220, 0.223, 0.226, 0.233, 0.247, 0.274, 0.288", \
                          "0.214, 0.217, 0.220, 0.227, 0.241, 0.268, 0.282", \
                          "0.203, 0.205, 0.209, 0.216, 0.229, 0.257, 0.270", \
                          "0.179, 0.182, 0.186, 0.192, 0.206, 0.234, 0.247", \
                          "0.133, 0.136, 0.139, 0.146, 0.160, 0.187, 0.201", \
                          "0.110, 0.113, 0.116, 0.123, 0.137, 0.164, 0.178" \
                        )
                        }
                } 
                timing() {
                        related_pin     : CLK;
                        timing_type     : hold_rising ;
                        rise_constraint(Bimod_Tag_ROM_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.015, 0.013, 0.011, 0.008, 0.000, 0.000, 0.000" \
                        )
                        }
                        fall_constraint(Bimod_Tag_ROM_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.400, 0.800, 1.000");
                        values ( \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.004, 0.002, 0.000, 0.000, 0.000, 0.000, 0.000", \
                          "0.027, 0.025, 0.021, 0.014, 0.001, 0.000, 0.000" \
                        )
                        }
               }
                internal_power(){
                        when : "CEN";
                        rise_power(Bimod_Tag_ROM_energy_template_sigslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.326, 0.326")
                        }
                        fall_power(Bimod_Tag_ROM_energy_template_sigslew) {
                        index_1 ("0.000, 1.000");
                        values ("0.326, 0.326")
                        }
                }
        }

        cell_leakage_power : 3.15E-3;
}
}
